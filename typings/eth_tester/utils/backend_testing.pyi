from _typeshed import Incomplete
from eth_tester.constants import BURN_ADDRESS as BURN_ADDRESS
from eth_tester.constants import UINT256_MAX as UINT256_MAX
from eth_tester.constants import UINT256_MIN as UINT256_MIN
from eth_tester.exceptions import AccountLocked as AccountLocked
from eth_tester.exceptions import BlockNotFound as BlockNotFound
from eth_tester.exceptions import FilterNotFound as FilterNotFound
from eth_tester.exceptions import TransactionFailed as TransactionFailed
from eth_tester.exceptions import TransactionNotFound as TransactionNotFound
from eth_tester.exceptions import ValidationError as ValidationError

from .emitter_contract import EMITTER_ENUM as EMITTER_ENUM

PK_A: str
PK_A_ADDRESS: str
NON_DEFAULT_GAS_PRICE: int
SIMPLE_TRANSACTION: Incomplete
TRANSACTION_WTH_NONCE: Incomplete
CONTRACT_TRANSACTION_EMPTY_TO: Incomplete
CONTRACT_TRANSACTION_MISSING_TO: Incomplete
BLOCK_KEYS: Incomplete

class BaseTestBackendDirect:
    supports_evm_execution: bool
    def skip_if_no_evm_execution(self) -> None: ...
    def test_get_accounts(self, eth_tester) -> None: ...
    def test_add_account_no_password(self, eth_tester) -> None: ...
    def test_add_account_with_password(self, eth_tester) -> None: ...
    def test_get_balance_of_listed_accounts(self, eth_tester) -> None: ...
    def test_get_code_account_with_code(self, eth_tester) -> None: ...
    def test_get_code_account_without_code(self, eth_tester) -> None: ...
    def test_get_nonce(self, eth_tester) -> None: ...
    def test_get_fee_history(self, eth_tester, block_count, newest_block, reward_percentiles, expected) -> None: ...
    def test_get_fee_history_fails(
        self, eth_tester, block_count, newest_block, reward_percentiles, error, message
    ) -> None: ...
    def test_mine_block_single(self, eth_tester) -> None: ...
    def test_mine_multiple_blocks(self, eth_tester) -> None: ...
    def test_gas_limit_constant(self, eth_tester) -> None: ...
    def test_send_raw_transaction_valid_raw_transaction(self, eth_tester, is_pending) -> None: ...
    def test_send_raw_transaction_invalid_rlp_transaction(self, eth_tester) -> None: ...
    def test_send_raw_transaction_invalid_raw_transaction(self, eth_tester) -> None: ...
    def test_send_transaction(self, eth_tester, test_transaction) -> None: ...
    def test_send_transaction_raises_with_legacy_and_dynamic_fee_fields(self, eth_tester) -> None: ...
    def test_send_transaction_no_gas_price_or_dynamic_fees(self, eth_tester) -> None: ...
    def test_send_access_list_transaction(self, eth_tester) -> None: ...
    def test_send_dynamic_fee_transaction(self, eth_tester) -> None: ...
    def test_block_number_auto_mine_transactions_enabled(self, eth_tester) -> None: ...
    def test_auto_mine_transactions_disabled_block_number(self, eth_tester) -> None: ...
    def test_auto_mine_transactions_disabled_replace_transaction(self, eth_tester) -> None: ...
    def test_auto_mine_transactions_disabled_multiple_accounts(self, eth_tester) -> None: ...
    def test_auto_mine_transactions_disabled_returns_hashes_when_enabled(self, eth_tester) -> None: ...
    def test_manual_mine_pending_transactions(self, eth_tester, test_transaction) -> None: ...
    def test_get_genesis_block_by_number(self, eth_tester) -> None: ...
    def test_get_genesis_block_by_hash(self, eth_tester) -> None: ...
    def test_get_block_by_number(self, eth_tester) -> None: ...
    def test_get_block_by_number_full_transactions(self, eth_tester) -> None: ...
    def test_get_block_by_number_only_transaction_hashes(self, eth_tester) -> None: ...
    def test_get_block_by_hash(self, eth_tester) -> None: ...
    def test_get_block_by_hash_full_transactions(self, eth_tester) -> None: ...
    def test_get_block_by_hash_only_transaction_hashes(self, eth_tester) -> None: ...
    def test_get_block_by_earliest(self, eth_tester) -> None: ...
    def test_get_block_by_latest_unmined_genesis(self, eth_tester) -> None: ...
    def test_get_block_by_latest_only_genesis(self, eth_tester) -> None: ...
    def test_get_block_by_latest(self, eth_tester) -> None: ...
    def test_get_block_by_pending(self, eth_tester) -> None: ...
    def test_get_block_missing(self, eth_tester) -> None: ...
    def test_get_transaction_by_hash(self, eth_tester) -> None: ...
    def test_get_transaction_by_hash_for_unmined_transaction(self, eth_tester) -> None: ...
    def test_get_transaction_receipt_for_mined_transaction(self, eth_tester) -> None: ...
    def test_receipt_transaction_type_for_mined_transaction(self, eth_tester, type_specific_params, _type) -> None: ...
    def test_receipt_effective_gas_price_for_mined_transaction_legacy(self, eth_tester) -> None: ...
    def test_receipt_effective_gas_price_for_mined_transaction_base_fee_minimum(self, eth_tester) -> None: ...
    def test_receipt_effective_gas_price_for_mined_transaction_max_fee_minimum(self, eth_tester) -> None: ...
    def test_get_transaction_receipt_for_unmined_transaction_raises(self, eth_tester) -> None: ...
    def test_call_return13(self, eth_tester) -> None: ...
    def test_call_add(self, eth_tester) -> None: ...
    def test_call_query_previous_state(self, eth_tester) -> None: ...
    def test_estimate_gas(self, eth_tester) -> None: ...
    def test_estimate_gas_with_block_identifier(self, eth_tester) -> None: ...
    def test_can_call_after_exception_raised_calling(self, eth_tester) -> None: ...
    def test_can_estimate_gas_after_exception_raised_estimating_gas(self, eth_tester) -> None: ...
    def test_revert_reason_message(self, eth_tester) -> None: ...
    def test_genesis_snapshot_and_revert(self, eth_tester) -> None: ...
    def test_snapshot_and_revert_post_genesis(self, eth_tester) -> None: ...
    def test_revert_cleans_up_invalidated_pending_block_filters(self, eth_tester) -> None: ...
    def test_revert_cleans_up_invalidated_pending_transaction_filters(self, eth_tester): ...
    def test_revert_cleans_up_invalidated_log_entries(self, eth_tester): ...
    def test_reset_to_genesis(self, eth_tester) -> None: ...
    def test_block_filter(self, eth_tester) -> None: ...
    def test_pending_transaction_filter(self, eth_tester) -> None: ...
    def test_log_filter_picks_up_new_logs(self, eth_tester, filter_topics, expected) -> None: ...
    def test_log_filter_invalid_topics_throws_error(self, eth_tester, filter_topics) -> None: ...
    def test_log_filter_includes_old_logs(self, eth_tester) -> None: ...
    def test_log_filter_includes_latest_block_with_to_block(self, eth_tester) -> None: ...
    def test_delete_filter(self, eth_tester) -> None: ...
    def test_receipt_gas_used_computation(self, eth_tester) -> None: ...
    def test_time_traveling(self, eth_tester) -> None: ...
    def test_time_traveling_backwards_not_allowed(self, eth_tester) -> None: ...
    def test_get_transaction_receipt_byzantium(self, eth_tester, test_transaction) -> None: ...
    def test_duplicate_log_entries(self, eth_tester): ...
